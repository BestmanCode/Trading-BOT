#!/bin/bash

# Set paths and commands
SCRIPT_DIR=$(dirname "$(readlink -f "$0")")
TRADINGBOT_DIR=$HOME/.TradingBot
LOG_DIR=$TRADINGBOT_DIR/log
DATA_DIR=$TRADINGBOT_DIR/data
CONFIG_DIR=$TRADINGBOT_DIR/config
INSTALL_DIR=/opt/TradingBot

SCRIPT_FILE=$SCRIPT_DIR/trading_bot_ctl
DOCKER_SCRIPT_FILE=$SCRIPT_DIR/run_docker.sh
REQUIREMENTS_FILE=$SCRIPT_DIR/requirements.txt
PID_FILE=$LOG_DIR/pid.txt
LOG_FILE=$LOG_DIR/log.txt
CONFIG_FILE=$CONFIG_DIR/config.json
CREDENTIALS_FILE=$DATA_DIR/.credentials
RUN_ARGS=""
PYTHON_BIN="$(command -v python3) -u"
MAIN_BIN="$INSTALL_DIR/main.py"
RUN_COMMAND="$PYTHON_BIN $MAIN_BIN $RUN_ARGS"
PIP_BIN="pip3"

CONTAINER_NAME=dkr_trading_bot

start()
{
  RUN_ARGS=""
  nohup $RUN_COMMAND >$LOG_FILE 2>&1 & echo $! > $PID_FILE
  echo TradingBot started
}

stop()
{
  cat $PID_FILE | xargs kill
  rm $PID_FILE
  echo TradingBot stopped
}

close_positions()
{
  echo Starting TradingBot to close positions...
  RUN_ARGS="-c"
  nohup $RUN_COMMAND >$LOG_FILE 2>&1 & echo $! > $PID_FILE
}

install_deps()
{
  echo Installing dependencies...
  if ! command -v $PIP_BIN > /dev/null 2>&1;
  then
      apt-get install -y python3-pip
  fi
  $PIP_BIN install -r $REQUIREMENTS_FILE
}

test()
{
  echo Running unit test with pytest...
  install_deps
  sphinx-build -nWT -b dummy doc doc/_build/html
  pytest
}

start_docker()
{
  echo Starting TradingBot in a Docker container...
  IMAGE=python:3
  docker run -dit --rm --name $CONTAINER_NAME \
    -v $INSTALL_DIR:$INSTALL_DIR -v $TRADINGBOT_DIR:/root/.TradingBot \
    -w "/app" $IMAGE /bin/bash -cx "$INSTALL_DIR/trading_bot_ctl run_docker"
}

run_docker()
{
  $INSTALL_DIR/trading_bot_ctl install_deps
  $INSTALL_DIR/trading_bot_ctl start
}

stop_docker()
{
  docker kill $CONTAINER_NAME
}

test_docker()
{
  echo Running unit test with pytest in a Docker container...
  echo Testing against Python 3.4...
  docker run -it --rm -v $(pwd):/app python:3.4 /bin/bash -cx "cd app && ./trading_bot_ctl test"
  echo Testing against Python 3.5...
  docker run -it --rm -v $(pwd):/app python:3.5 /bin/bash -cx "cd app && ./trading_bot_ctl test"
  echo Testing against Python 3.6...
  docker run -it --rm -v $(pwd):/app python:3.6 /bin/bash -cx "cd app && ./trading_bot_ctl test"
  echo Testing against Python 3 latest...
  docker run -it --rm -v $(pwd):/app python:3 /bin/bash -cx "cd app && ./trading_bot_ctl test"
}

docs()
{
  sphinx-build -nWT -b html doc doc/_build/html
}

help()
{
  echo "Try with:"
  echo "  help - Show this help message"
  echo "  start - Start TradingBot"
  echo "  stop - Stop TradingBot"
  echo "  close_positions - Close all open positions and stop TradingBot"
  echo "  install_deps - Install TradingBot dependencies"
  echo "  test - Run TradingBot automatic test suite"
  echo "  test_docker - Run TradingBot automatic test suite inside docker containers"
  echo "  start_docker - Run TradingBot in a docker container"
  echo "  docs - Build TradingBot documentation"
  echo "  install - Install TradingBot"
}

install()
{
  echo Installing TradingBot...
  # Install dependencies
  install_deps
  # Create installation directory
  mkdir -p $INSTALL_DIR
  # Copy sources in installation directory
  rsync -avm --include='*.py' -f 'hide,! */' $SCRIPT_DIR/src/ $INSTALL_DIR
  # Copy scripts too
  cp $SCRIPT_FILE $INSTALL_DIR
  cp $DOCKER_SCRIPT_FILE $INSTALL_DIR
  cp $REQUIREMENTS_FILE $INSTALL_DIR
  # Create TradingBot user folder
  mkdir -p $TRADINGBOT_DIR
  mkdir -p $CONFIG_DIR
  mkdir -p $LOG_DIR
  mkdir -p $DATA_DIR
  # Copy config file
  cp -p $SCRIPT_DIR/config/config.json $CONFIG_DIR/config.json
  # Message
  echo IMPORTANT: change ownership of the following folder: $TRADINGBOT_DIR
  echo Use the following command: sudo chown -R '$USER': $TRADINGBOT_DIR

}

case $1 in
  start|stop|close_positions|install_deps|test|test_docker|start_docker|docs|install|run_docker|stop_docker) "$1" ;;
  *) help ;;
esac
